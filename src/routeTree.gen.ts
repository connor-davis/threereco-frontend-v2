/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as MfaImport } from './routes/_mfa'
import { Route as AuthImport } from './routes/_auth'
import { Route as AuthIndexImport } from './routes/_auth/index'
import { Route as AuthenticationLoginImport } from './routes/authentication/login'
import { Route as AuthUsersIndexImport } from './routes/_auth/users/index'
import { Route as AuthCollectorsIndexImport } from './routes/_auth/collectors/index'
import { Route as AuthBusinessesIndexImport } from './routes/_auth/businesses/index'
import { Route as MfaMfaVerifyImport } from './routes/_mfa/mfa/verify'
import { Route as MfaMfaEnableImport } from './routes/_mfa/mfa/enable'
import { Route as AuthUsersCreateImport } from './routes/_auth/users/create'
import { Route as AuthUsersIdImport } from './routes/_auth/users/$id'
import { Route as AuthCollectorsCreateImport } from './routes/_auth/collectors/create'
import { Route as AuthCollectorsIdImport } from './routes/_auth/collectors/$id'
import { Route as AuthBusinessesCreateImport } from './routes/_auth/businesses/create'
import { Route as AuthBusinessesIdImport } from './routes/_auth/businesses/$id'
import { Route as AuthUsersEditIdImport } from './routes/_auth/users/edit/$id'
import { Route as AuthCollectorsEditIdImport } from './routes/_auth/collectors/edit/$id'
import { Route as AuthBusinessesEditIdImport } from './routes/_auth/businesses/edit/$id'

// Create/Update Routes

const MfaRoute = MfaImport.update({
  id: '/_mfa',
  getParentRoute: () => rootRoute,
} as any)

const AuthRoute = AuthImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any)

const AuthIndexRoute = AuthIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthRoute,
} as any)

const AuthenticationLoginRoute = AuthenticationLoginImport.update({
  id: '/authentication/login',
  path: '/authentication/login',
  getParentRoute: () => rootRoute,
} as any)

const AuthUsersIndexRoute = AuthUsersIndexImport.update({
  id: '/users/',
  path: '/users/',
  getParentRoute: () => AuthRoute,
} as any)

const AuthCollectorsIndexRoute = AuthCollectorsIndexImport.update({
  id: '/collectors/',
  path: '/collectors/',
  getParentRoute: () => AuthRoute,
} as any)

const AuthBusinessesIndexRoute = AuthBusinessesIndexImport.update({
  id: '/businesses/',
  path: '/businesses/',
  getParentRoute: () => AuthRoute,
} as any)

const MfaMfaVerifyRoute = MfaMfaVerifyImport.update({
  id: '/mfa/verify',
  path: '/mfa/verify',
  getParentRoute: () => MfaRoute,
} as any)

const MfaMfaEnableRoute = MfaMfaEnableImport.update({
  id: '/mfa/enable',
  path: '/mfa/enable',
  getParentRoute: () => MfaRoute,
} as any)

const AuthUsersCreateRoute = AuthUsersCreateImport.update({
  id: '/users/create',
  path: '/users/create',
  getParentRoute: () => AuthRoute,
} as any)

const AuthUsersIdRoute = AuthUsersIdImport.update({
  id: '/users/$id',
  path: '/users/$id',
  getParentRoute: () => AuthRoute,
} as any)

const AuthCollectorsCreateRoute = AuthCollectorsCreateImport.update({
  id: '/collectors/create',
  path: '/collectors/create',
  getParentRoute: () => AuthRoute,
} as any)

const AuthCollectorsIdRoute = AuthCollectorsIdImport.update({
  id: '/collectors/$id',
  path: '/collectors/$id',
  getParentRoute: () => AuthRoute,
} as any)

const AuthBusinessesCreateRoute = AuthBusinessesCreateImport.update({
  id: '/businesses/create',
  path: '/businesses/create',
  getParentRoute: () => AuthRoute,
} as any)

const AuthBusinessesIdRoute = AuthBusinessesIdImport.update({
  id: '/businesses/$id',
  path: '/businesses/$id',
  getParentRoute: () => AuthRoute,
} as any)

const AuthUsersEditIdRoute = AuthUsersEditIdImport.update({
  id: '/users/edit/$id',
  path: '/users/edit/$id',
  getParentRoute: () => AuthRoute,
} as any)

const AuthCollectorsEditIdRoute = AuthCollectorsEditIdImport.update({
  id: '/collectors/edit/$id',
  path: '/collectors/edit/$id',
  getParentRoute: () => AuthRoute,
} as any)

const AuthBusinessesEditIdRoute = AuthBusinessesEditIdImport.update({
  id: '/businesses/edit/$id',
  path: '/businesses/edit/$id',
  getParentRoute: () => AuthRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/_mfa': {
      id: '/_mfa'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof MfaImport
      parentRoute: typeof rootRoute
    }
    '/authentication/login': {
      id: '/authentication/login'
      path: '/authentication/login'
      fullPath: '/authentication/login'
      preLoaderRoute: typeof AuthenticationLoginImport
      parentRoute: typeof rootRoute
    }
    '/_auth/': {
      id: '/_auth/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthIndexImport
      parentRoute: typeof AuthImport
    }
    '/_auth/businesses/$id': {
      id: '/_auth/businesses/$id'
      path: '/businesses/$id'
      fullPath: '/businesses/$id'
      preLoaderRoute: typeof AuthBusinessesIdImport
      parentRoute: typeof AuthImport
    }
    '/_auth/businesses/create': {
      id: '/_auth/businesses/create'
      path: '/businesses/create'
      fullPath: '/businesses/create'
      preLoaderRoute: typeof AuthBusinessesCreateImport
      parentRoute: typeof AuthImport
    }
    '/_auth/collectors/$id': {
      id: '/_auth/collectors/$id'
      path: '/collectors/$id'
      fullPath: '/collectors/$id'
      preLoaderRoute: typeof AuthCollectorsIdImport
      parentRoute: typeof AuthImport
    }
    '/_auth/collectors/create': {
      id: '/_auth/collectors/create'
      path: '/collectors/create'
      fullPath: '/collectors/create'
      preLoaderRoute: typeof AuthCollectorsCreateImport
      parentRoute: typeof AuthImport
    }
    '/_auth/users/$id': {
      id: '/_auth/users/$id'
      path: '/users/$id'
      fullPath: '/users/$id'
      preLoaderRoute: typeof AuthUsersIdImport
      parentRoute: typeof AuthImport
    }
    '/_auth/users/create': {
      id: '/_auth/users/create'
      path: '/users/create'
      fullPath: '/users/create'
      preLoaderRoute: typeof AuthUsersCreateImport
      parentRoute: typeof AuthImport
    }
    '/_mfa/mfa/enable': {
      id: '/_mfa/mfa/enable'
      path: '/mfa/enable'
      fullPath: '/mfa/enable'
      preLoaderRoute: typeof MfaMfaEnableImport
      parentRoute: typeof MfaImport
    }
    '/_mfa/mfa/verify': {
      id: '/_mfa/mfa/verify'
      path: '/mfa/verify'
      fullPath: '/mfa/verify'
      preLoaderRoute: typeof MfaMfaVerifyImport
      parentRoute: typeof MfaImport
    }
    '/_auth/businesses/': {
      id: '/_auth/businesses/'
      path: '/businesses'
      fullPath: '/businesses'
      preLoaderRoute: typeof AuthBusinessesIndexImport
      parentRoute: typeof AuthImport
    }
    '/_auth/collectors/': {
      id: '/_auth/collectors/'
      path: '/collectors'
      fullPath: '/collectors'
      preLoaderRoute: typeof AuthCollectorsIndexImport
      parentRoute: typeof AuthImport
    }
    '/_auth/users/': {
      id: '/_auth/users/'
      path: '/users'
      fullPath: '/users'
      preLoaderRoute: typeof AuthUsersIndexImport
      parentRoute: typeof AuthImport
    }
    '/_auth/businesses/edit/$id': {
      id: '/_auth/businesses/edit/$id'
      path: '/businesses/edit/$id'
      fullPath: '/businesses/edit/$id'
      preLoaderRoute: typeof AuthBusinessesEditIdImport
      parentRoute: typeof AuthImport
    }
    '/_auth/collectors/edit/$id': {
      id: '/_auth/collectors/edit/$id'
      path: '/collectors/edit/$id'
      fullPath: '/collectors/edit/$id'
      preLoaderRoute: typeof AuthCollectorsEditIdImport
      parentRoute: typeof AuthImport
    }
    '/_auth/users/edit/$id': {
      id: '/_auth/users/edit/$id'
      path: '/users/edit/$id'
      fullPath: '/users/edit/$id'
      preLoaderRoute: typeof AuthUsersEditIdImport
      parentRoute: typeof AuthImport
    }
  }
}

// Create and export the route tree

interface AuthRouteChildren {
  AuthIndexRoute: typeof AuthIndexRoute
  AuthBusinessesIdRoute: typeof AuthBusinessesIdRoute
  AuthBusinessesCreateRoute: typeof AuthBusinessesCreateRoute
  AuthCollectorsIdRoute: typeof AuthCollectorsIdRoute
  AuthCollectorsCreateRoute: typeof AuthCollectorsCreateRoute
  AuthUsersIdRoute: typeof AuthUsersIdRoute
  AuthUsersCreateRoute: typeof AuthUsersCreateRoute
  AuthBusinessesIndexRoute: typeof AuthBusinessesIndexRoute
  AuthCollectorsIndexRoute: typeof AuthCollectorsIndexRoute
  AuthUsersIndexRoute: typeof AuthUsersIndexRoute
  AuthBusinessesEditIdRoute: typeof AuthBusinessesEditIdRoute
  AuthCollectorsEditIdRoute: typeof AuthCollectorsEditIdRoute
  AuthUsersEditIdRoute: typeof AuthUsersEditIdRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthIndexRoute: AuthIndexRoute,
  AuthBusinessesIdRoute: AuthBusinessesIdRoute,
  AuthBusinessesCreateRoute: AuthBusinessesCreateRoute,
  AuthCollectorsIdRoute: AuthCollectorsIdRoute,
  AuthCollectorsCreateRoute: AuthCollectorsCreateRoute,
  AuthUsersIdRoute: AuthUsersIdRoute,
  AuthUsersCreateRoute: AuthUsersCreateRoute,
  AuthBusinessesIndexRoute: AuthBusinessesIndexRoute,
  AuthCollectorsIndexRoute: AuthCollectorsIndexRoute,
  AuthUsersIndexRoute: AuthUsersIndexRoute,
  AuthBusinessesEditIdRoute: AuthBusinessesEditIdRoute,
  AuthCollectorsEditIdRoute: AuthCollectorsEditIdRoute,
  AuthUsersEditIdRoute: AuthUsersEditIdRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

interface MfaRouteChildren {
  MfaMfaEnableRoute: typeof MfaMfaEnableRoute
  MfaMfaVerifyRoute: typeof MfaMfaVerifyRoute
}

const MfaRouteChildren: MfaRouteChildren = {
  MfaMfaEnableRoute: MfaMfaEnableRoute,
  MfaMfaVerifyRoute: MfaMfaVerifyRoute,
}

const MfaRouteWithChildren = MfaRoute._addFileChildren(MfaRouteChildren)

export interface FileRoutesByFullPath {
  '': typeof MfaRouteWithChildren
  '/authentication/login': typeof AuthenticationLoginRoute
  '/': typeof AuthIndexRoute
  '/businesses/$id': typeof AuthBusinessesIdRoute
  '/businesses/create': typeof AuthBusinessesCreateRoute
  '/collectors/$id': typeof AuthCollectorsIdRoute
  '/collectors/create': typeof AuthCollectorsCreateRoute
  '/users/$id': typeof AuthUsersIdRoute
  '/users/create': typeof AuthUsersCreateRoute
  '/mfa/enable': typeof MfaMfaEnableRoute
  '/mfa/verify': typeof MfaMfaVerifyRoute
  '/businesses': typeof AuthBusinessesIndexRoute
  '/collectors': typeof AuthCollectorsIndexRoute
  '/users': typeof AuthUsersIndexRoute
  '/businesses/edit/$id': typeof AuthBusinessesEditIdRoute
  '/collectors/edit/$id': typeof AuthCollectorsEditIdRoute
  '/users/edit/$id': typeof AuthUsersEditIdRoute
}

export interface FileRoutesByTo {
  '': typeof MfaRouteWithChildren
  '/authentication/login': typeof AuthenticationLoginRoute
  '/': typeof AuthIndexRoute
  '/businesses/$id': typeof AuthBusinessesIdRoute
  '/businesses/create': typeof AuthBusinessesCreateRoute
  '/collectors/$id': typeof AuthCollectorsIdRoute
  '/collectors/create': typeof AuthCollectorsCreateRoute
  '/users/$id': typeof AuthUsersIdRoute
  '/users/create': typeof AuthUsersCreateRoute
  '/mfa/enable': typeof MfaMfaEnableRoute
  '/mfa/verify': typeof MfaMfaVerifyRoute
  '/businesses': typeof AuthBusinessesIndexRoute
  '/collectors': typeof AuthCollectorsIndexRoute
  '/users': typeof AuthUsersIndexRoute
  '/businesses/edit/$id': typeof AuthBusinessesEditIdRoute
  '/collectors/edit/$id': typeof AuthCollectorsEditIdRoute
  '/users/edit/$id': typeof AuthUsersEditIdRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_auth': typeof AuthRouteWithChildren
  '/_mfa': typeof MfaRouteWithChildren
  '/authentication/login': typeof AuthenticationLoginRoute
  '/_auth/': typeof AuthIndexRoute
  '/_auth/businesses/$id': typeof AuthBusinessesIdRoute
  '/_auth/businesses/create': typeof AuthBusinessesCreateRoute
  '/_auth/collectors/$id': typeof AuthCollectorsIdRoute
  '/_auth/collectors/create': typeof AuthCollectorsCreateRoute
  '/_auth/users/$id': typeof AuthUsersIdRoute
  '/_auth/users/create': typeof AuthUsersCreateRoute
  '/_mfa/mfa/enable': typeof MfaMfaEnableRoute
  '/_mfa/mfa/verify': typeof MfaMfaVerifyRoute
  '/_auth/businesses/': typeof AuthBusinessesIndexRoute
  '/_auth/collectors/': typeof AuthCollectorsIndexRoute
  '/_auth/users/': typeof AuthUsersIndexRoute
  '/_auth/businesses/edit/$id': typeof AuthBusinessesEditIdRoute
  '/_auth/collectors/edit/$id': typeof AuthCollectorsEditIdRoute
  '/_auth/users/edit/$id': typeof AuthUsersEditIdRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/authentication/login'
    | '/'
    | '/businesses/$id'
    | '/businesses/create'
    | '/collectors/$id'
    | '/collectors/create'
    | '/users/$id'
    | '/users/create'
    | '/mfa/enable'
    | '/mfa/verify'
    | '/businesses'
    | '/collectors'
    | '/users'
    | '/businesses/edit/$id'
    | '/collectors/edit/$id'
    | '/users/edit/$id'
  fileRoutesByTo: FileRoutesByTo
  to:
    | ''
    | '/authentication/login'
    | '/'
    | '/businesses/$id'
    | '/businesses/create'
    | '/collectors/$id'
    | '/collectors/create'
    | '/users/$id'
    | '/users/create'
    | '/mfa/enable'
    | '/mfa/verify'
    | '/businesses'
    | '/collectors'
    | '/users'
    | '/businesses/edit/$id'
    | '/collectors/edit/$id'
    | '/users/edit/$id'
  id:
    | '__root__'
    | '/_auth'
    | '/_mfa'
    | '/authentication/login'
    | '/_auth/'
    | '/_auth/businesses/$id'
    | '/_auth/businesses/create'
    | '/_auth/collectors/$id'
    | '/_auth/collectors/create'
    | '/_auth/users/$id'
    | '/_auth/users/create'
    | '/_mfa/mfa/enable'
    | '/_mfa/mfa/verify'
    | '/_auth/businesses/'
    | '/_auth/collectors/'
    | '/_auth/users/'
    | '/_auth/businesses/edit/$id'
    | '/_auth/collectors/edit/$id'
    | '/_auth/users/edit/$id'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AuthRoute: typeof AuthRouteWithChildren
  MfaRoute: typeof MfaRouteWithChildren
  AuthenticationLoginRoute: typeof AuthenticationLoginRoute
}

const rootRouteChildren: RootRouteChildren = {
  AuthRoute: AuthRouteWithChildren,
  MfaRoute: MfaRouteWithChildren,
  AuthenticationLoginRoute: AuthenticationLoginRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_auth",
        "/_mfa",
        "/authentication/login"
      ]
    },
    "/_auth": {
      "filePath": "_auth.tsx",
      "children": [
        "/_auth/",
        "/_auth/businesses/$id",
        "/_auth/businesses/create",
        "/_auth/collectors/$id",
        "/_auth/collectors/create",
        "/_auth/users/$id",
        "/_auth/users/create",
        "/_auth/businesses/",
        "/_auth/collectors/",
        "/_auth/users/",
        "/_auth/businesses/edit/$id",
        "/_auth/collectors/edit/$id",
        "/_auth/users/edit/$id"
      ]
    },
    "/_mfa": {
      "filePath": "_mfa.tsx",
      "children": [
        "/_mfa/mfa/enable",
        "/_mfa/mfa/verify"
      ]
    },
    "/authentication/login": {
      "filePath": "authentication/login.tsx"
    },
    "/_auth/": {
      "filePath": "_auth/index.tsx",
      "parent": "/_auth"
    },
    "/_auth/businesses/$id": {
      "filePath": "_auth/businesses/$id.tsx",
      "parent": "/_auth"
    },
    "/_auth/businesses/create": {
      "filePath": "_auth/businesses/create.tsx",
      "parent": "/_auth"
    },
    "/_auth/collectors/$id": {
      "filePath": "_auth/collectors/$id.tsx",
      "parent": "/_auth"
    },
    "/_auth/collectors/create": {
      "filePath": "_auth/collectors/create.tsx",
      "parent": "/_auth"
    },
    "/_auth/users/$id": {
      "filePath": "_auth/users/$id.tsx",
      "parent": "/_auth"
    },
    "/_auth/users/create": {
      "filePath": "_auth/users/create.tsx",
      "parent": "/_auth"
    },
    "/_mfa/mfa/enable": {
      "filePath": "_mfa/mfa/enable.tsx",
      "parent": "/_mfa"
    },
    "/_mfa/mfa/verify": {
      "filePath": "_mfa/mfa/verify.tsx",
      "parent": "/_mfa"
    },
    "/_auth/businesses/": {
      "filePath": "_auth/businesses/index.tsx",
      "parent": "/_auth"
    },
    "/_auth/collectors/": {
      "filePath": "_auth/collectors/index.tsx",
      "parent": "/_auth"
    },
    "/_auth/users/": {
      "filePath": "_auth/users/index.tsx",
      "parent": "/_auth"
    },
    "/_auth/businesses/edit/$id": {
      "filePath": "_auth/businesses/edit/$id.tsx",
      "parent": "/_auth"
    },
    "/_auth/collectors/edit/$id": {
      "filePath": "_auth/collectors/edit/$id.tsx",
      "parent": "/_auth"
    },
    "/_auth/users/edit/$id": {
      "filePath": "_auth/users/edit/$id.tsx",
      "parent": "/_auth"
    }
  }
}
ROUTE_MANIFEST_END */
