// This file is auto-generated by @hey-api/openapi-ts

import type { Options as ClientOptions, TDataShape, Client } from '@hey-api/client-fetch';
import type { GetApiData, GetApiResponse, PostApiAuthenticationLoginData, PostApiAuthenticationLoginResponse, PostApiAuthenticationLoginError, PostApiAuthenticationLogoutData, PostApiAuthenticationLogoutResponse, PostApiAuthenticationLogoutError, PostApiAuthenticationRegisterData, PostApiAuthenticationRegisterResponse, PostApiAuthenticationRegisterError, GetApiAuthenticationCheckData, GetApiAuthenticationCheckResponse, GetApiAuthenticationCheckError, GetApiAuthenticationMfaEnableData, GetApiAuthenticationMfaEnableResponse, GetApiAuthenticationMfaEnableError, PostApiAuthenticationMfaVerifyData, PostApiAuthenticationMfaVerifyResponse, PostApiAuthenticationMfaVerifyError, PutApiAuthenticationPasswordResetData, PutApiAuthenticationPasswordResetResponse, PutApiAuthenticationPasswordResetError, DeleteApiAuthenticationDisableMfaData, DeleteApiAuthenticationDisableMfaResponse, DeleteApiAuthenticationDisableMfaError, GetApiUsersPagingData, GetApiUsersPagingResponse, GetApiUsersPagingError, GetApiUsersData, GetApiUsersResponse, GetApiUsersError, PostApiUsersData, PostApiUsersResponse, PostApiUsersError, DeleteApiUsersByIdData, DeleteApiUsersByIdResponse, DeleteApiUsersByIdError, GetApiUsersByIdData, GetApiUsersByIdResponse, GetApiUsersByIdError, PutApiUsersByIdData, PutApiUsersByIdResponse, PutApiUsersByIdError, PostApiUsersDeleteAccountData, PostApiUsersDeleteAccountResponse, PostApiUsersDeleteAccountError, GetApiBusinessesPagingData, GetApiBusinessesPagingResponse, GetApiBusinessesPagingError, GetApiBusinessesData, GetApiBusinessesResponse, GetApiBusinessesError, PostApiBusinessesData, PostApiBusinessesResponse, PostApiBusinessesError, DeleteApiBusinessesByIdData, DeleteApiBusinessesByIdResponse, DeleteApiBusinessesByIdError, GetApiBusinessesByIdData, GetApiBusinessesByIdResponse, GetApiBusinessesByIdError, PutApiBusinessesByIdData, PutApiBusinessesByIdResponse, PutApiBusinessesByIdError, GetApiCollectorsPagingData, GetApiCollectorsPagingResponse, GetApiCollectorsPagingError, GetApiCollectorsExportData, GetApiCollectorsExportResponse, GetApiCollectorsExportError, GetApiCollectorsData, GetApiCollectorsResponse, GetApiCollectorsError, PostApiCollectorsData, PostApiCollectorsResponse, PostApiCollectorsError, DeleteApiCollectorsByIdData, DeleteApiCollectorsByIdResponse, DeleteApiCollectorsByIdError, GetApiCollectorsByIdData, GetApiCollectorsByIdResponse, GetApiCollectorsByIdError, PutApiCollectorsByIdData, PutApiCollectorsByIdResponse, PutApiCollectorsByIdError, GetApiProductsPagingData, GetApiProductsPagingResponse, GetApiProductsPagingError, GetApiProductsData, GetApiProductsResponse, GetApiProductsError, PostApiProductsData, PostApiProductsResponse, PostApiProductsError, DeleteApiProductsByIdData, DeleteApiProductsByIdResponse, DeleteApiProductsByIdError, GetApiProductsByIdData, GetApiProductsByIdResponse, GetApiProductsByIdError, PutApiProductsByIdData, PutApiProductsByIdResponse, PutApiProductsByIdError, GetApiCollectionsPagingData, GetApiCollectionsPagingResponse, GetApiCollectionsPagingError, GetApiCollectionsExportData, GetApiCollectionsExportResponse, GetApiCollectionsExportError, GetApiCollectionsData, GetApiCollectionsResponse, GetApiCollectionsError, PostApiCollectionsData, PostApiCollectionsResponse, PostApiCollectionsError, DeleteApiCollectionsByIdData, DeleteApiCollectionsByIdResponse, DeleteApiCollectionsByIdError, GetApiCollectionsByIdData, GetApiCollectionsByIdResponse, GetApiCollectionsByIdError, PutApiCollectionsByIdData, PutApiCollectionsByIdResponse, PutApiCollectionsByIdError } from './types.gen';
import { client as _heyApiClient } from './client.gen';

export type Options<TData extends TDataShape = TDataShape, ThrowOnError extends boolean = boolean> = ClientOptions<TData, ThrowOnError> & {
    /**
     * You can provide a client instance returned by `createClient()` instead of
     * individual options. This might be also useful if you want to implement a
     * custom client.
     */
    client?: Client;
    /**
     * You can pass arbitrary values through the `meta` object. This can be
     * used to access values that aren't defined as part of the SDK function.
     */
    meta?: Record<string, unknown>;
};

export const getApi = <ThrowOnError extends boolean = false>(options?: Options<GetApiData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetApiResponse, unknown, ThrowOnError>({
        url: '/api',
        ...options
    });
};

export const postApiAuthenticationLogin = <ThrowOnError extends boolean = false>(options: Options<PostApiAuthenticationLoginData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostApiAuthenticationLoginResponse, PostApiAuthenticationLoginError, ThrowOnError>({
        url: '/api/authentication/login',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

export const postApiAuthenticationLogout = <ThrowOnError extends boolean = false>(options?: Options<PostApiAuthenticationLogoutData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).post<PostApiAuthenticationLogoutResponse, PostApiAuthenticationLogoutError, ThrowOnError>({
        url: '/api/authentication/logout',
        ...options
    });
};

export const postApiAuthenticationRegister = <ThrowOnError extends boolean = false>(options?: Options<PostApiAuthenticationRegisterData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).post<PostApiAuthenticationRegisterResponse, PostApiAuthenticationRegisterError, ThrowOnError>({
        url: '/api/authentication/register',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

export const getApiAuthenticationCheck = <ThrowOnError extends boolean = false>(options?: Options<GetApiAuthenticationCheckData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetApiAuthenticationCheckResponse, GetApiAuthenticationCheckError, ThrowOnError>({
        url: '/api/authentication/check',
        ...options
    });
};

export const getApiAuthenticationMfaEnable = <ThrowOnError extends boolean = false>(options?: Options<GetApiAuthenticationMfaEnableData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetApiAuthenticationMfaEnableResponse, GetApiAuthenticationMfaEnableError, ThrowOnError>({
        url: '/api/authentication/mfa/enable',
        ...options
    });
};

export const postApiAuthenticationMfaVerify = <ThrowOnError extends boolean = false>(options: Options<PostApiAuthenticationMfaVerifyData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostApiAuthenticationMfaVerifyResponse, PostApiAuthenticationMfaVerifyError, ThrowOnError>({
        url: '/api/authentication/mfa/verify',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

export const putApiAuthenticationPasswordReset = <ThrowOnError extends boolean = false>(options: Options<PutApiAuthenticationPasswordResetData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutApiAuthenticationPasswordResetResponse, PutApiAuthenticationPasswordResetError, ThrowOnError>({
        url: '/api/authentication/password-reset',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

export const deleteApiAuthenticationDisableMfa = <ThrowOnError extends boolean = false>(options: Options<DeleteApiAuthenticationDisableMfaData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteApiAuthenticationDisableMfaResponse, DeleteApiAuthenticationDisableMfaError, ThrowOnError>({
        url: '/api/authentication/disable-mfa',
        ...options
    });
};

export const getApiUsersPaging = <ThrowOnError extends boolean = false>(options?: Options<GetApiUsersPagingData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetApiUsersPagingResponse, GetApiUsersPagingError, ThrowOnError>({
        url: '/api/users/paging',
        ...options
    });
};

export const getApiUsers = <ThrowOnError extends boolean = false>(options?: Options<GetApiUsersData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetApiUsersResponse, GetApiUsersError, ThrowOnError>({
        url: '/api/users',
        ...options
    });
};

export const postApiUsers = <ThrowOnError extends boolean = false>(options: Options<PostApiUsersData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostApiUsersResponse, PostApiUsersError, ThrowOnError>({
        url: '/api/users',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

export const deleteApiUsersById = <ThrowOnError extends boolean = false>(options: Options<DeleteApiUsersByIdData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteApiUsersByIdResponse, DeleteApiUsersByIdError, ThrowOnError>({
        url: '/api/users/{id}',
        ...options
    });
};

export const getApiUsersById = <ThrowOnError extends boolean = false>(options: Options<GetApiUsersByIdData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetApiUsersByIdResponse, GetApiUsersByIdError, ThrowOnError>({
        url: '/api/users/{id}',
        ...options
    });
};

export const putApiUsersById = <ThrowOnError extends boolean = false>(options: Options<PutApiUsersByIdData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutApiUsersByIdResponse, PutApiUsersByIdError, ThrowOnError>({
        url: '/api/users/{id}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

export const postApiUsersDeleteAccount = <ThrowOnError extends boolean = false>(options: Options<PostApiUsersDeleteAccountData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostApiUsersDeleteAccountResponse, PostApiUsersDeleteAccountError, ThrowOnError>({
        url: '/api/users/delete-account',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

export const getApiBusinessesPaging = <ThrowOnError extends boolean = false>(options?: Options<GetApiBusinessesPagingData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetApiBusinessesPagingResponse, GetApiBusinessesPagingError, ThrowOnError>({
        url: '/api/businesses/paging',
        ...options
    });
};

export const getApiBusinesses = <ThrowOnError extends boolean = false>(options?: Options<GetApiBusinessesData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetApiBusinessesResponse, GetApiBusinessesError, ThrowOnError>({
        url: '/api/businesses',
        ...options
    });
};

export const postApiBusinesses = <ThrowOnError extends boolean = false>(options: Options<PostApiBusinessesData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostApiBusinessesResponse, PostApiBusinessesError, ThrowOnError>({
        url: '/api/businesses',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

export const deleteApiBusinessesById = <ThrowOnError extends boolean = false>(options: Options<DeleteApiBusinessesByIdData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteApiBusinessesByIdResponse, DeleteApiBusinessesByIdError, ThrowOnError>({
        url: '/api/businesses/{id}',
        ...options
    });
};

export const getApiBusinessesById = <ThrowOnError extends boolean = false>(options: Options<GetApiBusinessesByIdData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetApiBusinessesByIdResponse, GetApiBusinessesByIdError, ThrowOnError>({
        url: '/api/businesses/{id}',
        ...options
    });
};

export const putApiBusinessesById = <ThrowOnError extends boolean = false>(options: Options<PutApiBusinessesByIdData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutApiBusinessesByIdResponse, PutApiBusinessesByIdError, ThrowOnError>({
        url: '/api/businesses/{id}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

export const getApiCollectorsPaging = <ThrowOnError extends boolean = false>(options?: Options<GetApiCollectorsPagingData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetApiCollectorsPagingResponse, GetApiCollectorsPagingError, ThrowOnError>({
        url: '/api/collectors/paging',
        ...options
    });
};

export const getApiCollectorsExport = <ThrowOnError extends boolean = false>(options?: Options<GetApiCollectorsExportData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetApiCollectorsExportResponse, GetApiCollectorsExportError, ThrowOnError>({
        url: '/api/collectors/export',
        ...options
    });
};

export const getApiCollectors = <ThrowOnError extends boolean = false>(options?: Options<GetApiCollectorsData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetApiCollectorsResponse, GetApiCollectorsError, ThrowOnError>({
        url: '/api/collectors',
        ...options
    });
};

export const postApiCollectors = <ThrowOnError extends boolean = false>(options?: Options<PostApiCollectorsData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).post<PostApiCollectorsResponse, PostApiCollectorsError, ThrowOnError>({
        url: '/api/collectors',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

export const deleteApiCollectorsById = <ThrowOnError extends boolean = false>(options: Options<DeleteApiCollectorsByIdData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteApiCollectorsByIdResponse, DeleteApiCollectorsByIdError, ThrowOnError>({
        url: '/api/collectors/{id}',
        ...options
    });
};

export const getApiCollectorsById = <ThrowOnError extends boolean = false>(options?: Options<GetApiCollectorsByIdData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetApiCollectorsByIdResponse, GetApiCollectorsByIdError, ThrowOnError>({
        url: '/api/collectors/{id}',
        ...options
    });
};

export const putApiCollectorsById = <ThrowOnError extends boolean = false>(options: Options<PutApiCollectorsByIdData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutApiCollectorsByIdResponse, PutApiCollectorsByIdError, ThrowOnError>({
        url: '/api/collectors/{id}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

export const getApiProductsPaging = <ThrowOnError extends boolean = false>(options?: Options<GetApiProductsPagingData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetApiProductsPagingResponse, GetApiProductsPagingError, ThrowOnError>({
        url: '/api/products/paging',
        ...options
    });
};

export const getApiProducts = <ThrowOnError extends boolean = false>(options?: Options<GetApiProductsData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetApiProductsResponse, GetApiProductsError, ThrowOnError>({
        url: '/api/products',
        ...options
    });
};

export const postApiProducts = <ThrowOnError extends boolean = false>(options: Options<PostApiProductsData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostApiProductsResponse, PostApiProductsError, ThrowOnError>({
        url: '/api/products',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

export const deleteApiProductsById = <ThrowOnError extends boolean = false>(options: Options<DeleteApiProductsByIdData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteApiProductsByIdResponse, DeleteApiProductsByIdError, ThrowOnError>({
        url: '/api/products/{id}',
        ...options
    });
};

export const getApiProductsById = <ThrowOnError extends boolean = false>(options: Options<GetApiProductsByIdData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetApiProductsByIdResponse, GetApiProductsByIdError, ThrowOnError>({
        url: '/api/products/{id}',
        ...options
    });
};

export const putApiProductsById = <ThrowOnError extends boolean = false>(options: Options<PutApiProductsByIdData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutApiProductsByIdResponse, PutApiProductsByIdError, ThrowOnError>({
        url: '/api/products/{id}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

export const getApiCollectionsPaging = <ThrowOnError extends boolean = false>(options?: Options<GetApiCollectionsPagingData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetApiCollectionsPagingResponse, GetApiCollectionsPagingError, ThrowOnError>({
        url: '/api/collections/paging',
        ...options
    });
};

export const getApiCollectionsExport = <ThrowOnError extends boolean = false>(options?: Options<GetApiCollectionsExportData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetApiCollectionsExportResponse, GetApiCollectionsExportError, ThrowOnError>({
        url: '/api/collections/export',
        ...options
    });
};

export const getApiCollections = <ThrowOnError extends boolean = false>(options?: Options<GetApiCollectionsData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetApiCollectionsResponse, GetApiCollectionsError, ThrowOnError>({
        url: '/api/collections',
        ...options
    });
};

export const postApiCollections = <ThrowOnError extends boolean = false>(options: Options<PostApiCollectionsData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostApiCollectionsResponse, PostApiCollectionsError, ThrowOnError>({
        url: '/api/collections',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

export const deleteApiCollectionsById = <ThrowOnError extends boolean = false>(options: Options<DeleteApiCollectionsByIdData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteApiCollectionsByIdResponse, DeleteApiCollectionsByIdError, ThrowOnError>({
        url: '/api/collections/{id}',
        ...options
    });
};

export const getApiCollectionsById = <ThrowOnError extends boolean = false>(options: Options<GetApiCollectionsByIdData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetApiCollectionsByIdResponse, GetApiCollectionsByIdError, ThrowOnError>({
        url: '/api/collections/{id}',
        ...options
    });
};

export const putApiCollectionsById = <ThrowOnError extends boolean = false>(options: Options<PutApiCollectionsByIdData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutApiCollectionsByIdResponse, PutApiCollectionsByIdError, ThrowOnError>({
        url: '/api/collections/{id}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};