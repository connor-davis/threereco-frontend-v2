// This file is auto-generated by @hey-api/openapi-ts

import { createClient, createConfig, type Options } from '@hey-api/client-fetch';
import type { GetApiError, GetApiResponse, PostApiAuthenticationLoginData, PostApiAuthenticationLoginError, PostApiAuthenticationLoginResponse, PostApiAuthenticationLogoutError, PostApiAuthenticationLogoutResponse, PostApiAuthenticationRegisterData, PostApiAuthenticationRegisterError, PostApiAuthenticationRegisterResponse, GetApiAuthenticationCheckError, GetApiAuthenticationCheckResponse, GetApiAuthenticationMfaEnableError, GetApiAuthenticationMfaEnableResponse, PostApiAuthenticationMfaVerifyData, PostApiAuthenticationMfaVerifyError, PostApiAuthenticationMfaVerifyResponse, PutApiAuthenticationPasswordResetData, PutApiAuthenticationPasswordResetError, PutApiAuthenticationPasswordResetResponse, GetApiUsersData, GetApiUsersError, GetApiUsersResponse, PostApiUsersData, PostApiUsersError, PostApiUsersResponse, GetApiUsersByIdData, GetApiUsersByIdError, GetApiUsersByIdResponse, PutApiUsersByIdData, PutApiUsersByIdError, PutApiUsersByIdResponse, DeleteApiUsersByIdData, DeleteApiUsersByIdError, DeleteApiUsersByIdResponse, GetApiUsersPagingData, GetApiUsersPagingError, GetApiUsersPagingResponse, GetApiBusinessesData, GetApiBusinessesError, GetApiBusinessesResponse, PostApiBusinessesData, PostApiBusinessesError, PostApiBusinessesResponse, PutApiBusinessesData, PutApiBusinessesError, PutApiBusinessesResponse, DeleteApiBusinessesData, DeleteApiBusinessesError, DeleteApiBusinessesResponse, GetApiCollectorsData, GetApiCollectorsError, GetApiCollectorsResponse, PostApiCollectorsData, PostApiCollectorsError, PostApiCollectorsResponse, DeleteApiCollectorsData, DeleteApiCollectorsError, DeleteApiCollectorsResponse, PutApiCollectorsData, PutApiCollectorsError, PutApiCollectorsResponse, GetApiProductsData, GetApiProductsError, GetApiProductsResponse, PostApiProductsData, PostApiProductsError, PostApiProductsResponse, DeleteApiProductsData, DeleteApiProductsError, DeleteApiProductsResponse, PutApiProductsData, PutApiProductsError, PutApiProductsResponse, GetApiCollectionsData, GetApiCollectionsError, GetApiCollectionsResponse, PostApiCollectionsData, PostApiCollectionsError, PostApiCollectionsResponse, DeleteApiCollectionsData, DeleteApiCollectionsError, DeleteApiCollectionsResponse, PutApiCollectionsData, PutApiCollectionsError, PutApiCollectionsResponse, GetApiCollectionsExportData, GetApiCollectionsExportError, GetApiCollectionsExportResponse } from './types.gen';

export const client = createClient(createConfig());

export const getApi = <ThrowOnError extends boolean = false>(options?: Options<unknown, ThrowOnError>) => { return (options?.client ?? client).get<GetApiResponse, GetApiError, ThrowOnError>({
    ...options,
    url: '/api'
}); };

export const postApiAuthenticationLogin = <ThrowOnError extends boolean = false>(options: Options<PostApiAuthenticationLoginData, ThrowOnError>) => { return (options?.client ?? client).post<PostApiAuthenticationLoginResponse, PostApiAuthenticationLoginError, ThrowOnError>({
    ...options,
    url: '/api/authentication/login'
}); };

export const postApiAuthenticationLogout = <ThrowOnError extends boolean = false>(options?: Options<unknown, ThrowOnError>) => { return (options?.client ?? client).post<PostApiAuthenticationLogoutResponse, PostApiAuthenticationLogoutError, ThrowOnError>({
    ...options,
    url: '/api/authentication/logout'
}); };

export const postApiAuthenticationRegister = <ThrowOnError extends boolean = false>(options?: Options<PostApiAuthenticationRegisterData, ThrowOnError>) => { return (options?.client ?? client).post<PostApiAuthenticationRegisterResponse, PostApiAuthenticationRegisterError, ThrowOnError>({
    ...options,
    url: '/api/authentication/register'
}); };

export const getApiAuthenticationCheck = <ThrowOnError extends boolean = false>(options?: Options<unknown, ThrowOnError>) => { return (options?.client ?? client).get<GetApiAuthenticationCheckResponse, GetApiAuthenticationCheckError, ThrowOnError>({
    ...options,
    url: '/api/authentication/check'
}); };

export const getApiAuthenticationMfaEnable = <ThrowOnError extends boolean = false>(options?: Options<unknown, ThrowOnError>) => { return (options?.client ?? client).get<GetApiAuthenticationMfaEnableResponse, GetApiAuthenticationMfaEnableError, ThrowOnError>({
    ...options,
    url: '/api/authentication/mfa/enable'
}); };

export const postApiAuthenticationMfaVerify = <ThrowOnError extends boolean = false>(options: Options<PostApiAuthenticationMfaVerifyData, ThrowOnError>) => { return (options?.client ?? client).post<PostApiAuthenticationMfaVerifyResponse, PostApiAuthenticationMfaVerifyError, ThrowOnError>({
    ...options,
    url: '/api/authentication/mfa/verify'
}); };

export const putApiAuthenticationPasswordReset = <ThrowOnError extends boolean = false>(options: Options<PutApiAuthenticationPasswordResetData, ThrowOnError>) => { return (options?.client ?? client).put<PutApiAuthenticationPasswordResetResponse, PutApiAuthenticationPasswordResetError, ThrowOnError>({
    ...options,
    url: '/api/authentication/password-reset'
}); };

export const getApiUsers = <ThrowOnError extends boolean = false>(options?: Options<GetApiUsersData, ThrowOnError>) => { return (options?.client ?? client).get<GetApiUsersResponse, GetApiUsersError, ThrowOnError>({
    ...options,
    url: '/api/users'
}); };

export const postApiUsers = <ThrowOnError extends boolean = false>(options: Options<PostApiUsersData, ThrowOnError>) => { return (options?.client ?? client).post<PostApiUsersResponse, PostApiUsersError, ThrowOnError>({
    ...options,
    url: '/api/users'
}); };

export const getApiUsersById = <ThrowOnError extends boolean = false>(options: Options<GetApiUsersByIdData, ThrowOnError>) => { return (options?.client ?? client).get<GetApiUsersByIdResponse, GetApiUsersByIdError, ThrowOnError>({
    ...options,
    url: '/api/users/{id}'
}); };

export const putApiUsersById = <ThrowOnError extends boolean = false>(options: Options<PutApiUsersByIdData, ThrowOnError>) => { return (options?.client ?? client).put<PutApiUsersByIdResponse, PutApiUsersByIdError, ThrowOnError>({
    ...options,
    url: '/api/users/{id}'
}); };

export const deleteApiUsersById = <ThrowOnError extends boolean = false>(options: Options<DeleteApiUsersByIdData, ThrowOnError>) => { return (options?.client ?? client).delete<DeleteApiUsersByIdResponse, DeleteApiUsersByIdError, ThrowOnError>({
    ...options,
    url: '/api/users/{id}'
}); };

export const getApiUsersPaging = <ThrowOnError extends boolean = false>(options?: Options<GetApiUsersPagingData, ThrowOnError>) => { return (options?.client ?? client).get<GetApiUsersPagingResponse, GetApiUsersPagingError, ThrowOnError>({
    ...options,
    url: '/api/users/paging'
}); };

export const getApiBusinesses = <ThrowOnError extends boolean = false>(options?: Options<GetApiBusinessesData, ThrowOnError>) => { return (options?.client ?? client).get<GetApiBusinessesResponse, GetApiBusinessesError, ThrowOnError>({
    ...options,
    url: '/api/businesses'
}); };

export const postApiBusinesses = <ThrowOnError extends boolean = false>(options: Options<PostApiBusinessesData, ThrowOnError>) => { return (options?.client ?? client).post<PostApiBusinessesResponse, PostApiBusinessesError, ThrowOnError>({
    ...options,
    url: '/api/businesses'
}); };

export const putApiBusinesses = <ThrowOnError extends boolean = false>(options: Options<PutApiBusinessesData, ThrowOnError>) => { return (options?.client ?? client).put<PutApiBusinessesResponse, PutApiBusinessesError, ThrowOnError>({
    ...options,
    url: '/api/businesses'
}); };

export const deleteApiBusinesses = <ThrowOnError extends boolean = false>(options: Options<DeleteApiBusinessesData, ThrowOnError>) => { return (options?.client ?? client).delete<DeleteApiBusinessesResponse, DeleteApiBusinessesError, ThrowOnError>({
    ...options,
    url: '/api/businesses'
}); };

export const getApiCollectors = <ThrowOnError extends boolean = false>(options?: Options<GetApiCollectorsData, ThrowOnError>) => { return (options?.client ?? client).get<GetApiCollectorsResponse, GetApiCollectorsError, ThrowOnError>({
    ...options,
    url: '/api/collectors'
}); };

export const postApiCollectors = <ThrowOnError extends boolean = false>(options?: Options<PostApiCollectorsData, ThrowOnError>) => { return (options?.client ?? client).post<PostApiCollectorsResponse, PostApiCollectorsError, ThrowOnError>({
    ...options,
    url: '/api/collectors'
}); };

export const deleteApiCollectors = <ThrowOnError extends boolean = false>(options: Options<DeleteApiCollectorsData, ThrowOnError>) => { return (options?.client ?? client).delete<DeleteApiCollectorsResponse, DeleteApiCollectorsError, ThrowOnError>({
    ...options,
    url: '/api/collectors'
}); };

export const putApiCollectors = <ThrowOnError extends boolean = false>(options: Options<PutApiCollectorsData, ThrowOnError>) => { return (options?.client ?? client).put<PutApiCollectorsResponse, PutApiCollectorsError, ThrowOnError>({
    ...options,
    url: '/api/collectors'
}); };

export const getApiProducts = <ThrowOnError extends boolean = false>(options?: Options<GetApiProductsData, ThrowOnError>) => { return (options?.client ?? client).get<GetApiProductsResponse, GetApiProductsError, ThrowOnError>({
    ...options,
    url: '/api/products'
}); };

export const postApiProducts = <ThrowOnError extends boolean = false>(options: Options<PostApiProductsData, ThrowOnError>) => { return (options?.client ?? client).post<PostApiProductsResponse, PostApiProductsError, ThrowOnError>({
    ...options,
    url: '/api/products'
}); };

export const deleteApiProducts = <ThrowOnError extends boolean = false>(options: Options<DeleteApiProductsData, ThrowOnError>) => { return (options?.client ?? client).delete<DeleteApiProductsResponse, DeleteApiProductsError, ThrowOnError>({
    ...options,
    url: '/api/products'
}); };

export const putApiProducts = <ThrowOnError extends boolean = false>(options: Options<PutApiProductsData, ThrowOnError>) => { return (options?.client ?? client).put<PutApiProductsResponse, PutApiProductsError, ThrowOnError>({
    ...options,
    url: '/api/products'
}); };

export const getApiCollections = <ThrowOnError extends boolean = false>(options?: Options<GetApiCollectionsData, ThrowOnError>) => { return (options?.client ?? client).get<GetApiCollectionsResponse, GetApiCollectionsError, ThrowOnError>({
    ...options,
    url: '/api/collections'
}); };

export const postApiCollections = <ThrowOnError extends boolean = false>(options: Options<PostApiCollectionsData, ThrowOnError>) => { return (options?.client ?? client).post<PostApiCollectionsResponse, PostApiCollectionsError, ThrowOnError>({
    ...options,
    url: '/api/collections'
}); };

export const deleteApiCollections = <ThrowOnError extends boolean = false>(options: Options<DeleteApiCollectionsData, ThrowOnError>) => { return (options?.client ?? client).delete<DeleteApiCollectionsResponse, DeleteApiCollectionsError, ThrowOnError>({
    ...options,
    url: '/api/collections'
}); };

export const putApiCollections = <ThrowOnError extends boolean = false>(options: Options<PutApiCollectionsData, ThrowOnError>) => { return (options?.client ?? client).put<PutApiCollectionsResponse, PutApiCollectionsError, ThrowOnError>({
    ...options,
    url: '/api/collections'
}); };

export const getApiCollectionsExport = <ThrowOnError extends boolean = false>(options?: Options<GetApiCollectionsExportData, ThrowOnError>) => { return (options?.client ?? client).get<GetApiCollectionsExportResponse, GetApiCollectionsExportError, ThrowOnError>({
    ...options,
    url: '/api/collections/export'
}); };