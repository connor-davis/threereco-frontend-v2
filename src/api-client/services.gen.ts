// This file is auto-generated by @hey-api/openapi-ts

import { createClient, createConfig, type Options } from '@hey-api/client-fetch';
import type { GetApiError, GetApiResponse, PostApiAuthenticationLoginData, PostApiAuthenticationLoginError, PostApiAuthenticationLoginResponse, PostApiAuthenticationLogoutError, PostApiAuthenticationLogoutResponse, PostApiAuthenticationRegisterData, PostApiAuthenticationRegisterError, PostApiAuthenticationRegisterResponse, GetApiAuthenticationCheckError, GetApiAuthenticationCheckResponse, GetApiAuthenticationMfaEnableError, GetApiAuthenticationMfaEnableResponse, PostApiAuthenticationMfaVerifyData, PostApiAuthenticationMfaVerifyError, PostApiAuthenticationMfaVerifyResponse, PutApiAuthenticationPasswordResetData, PutApiAuthenticationPasswordResetError, PutApiAuthenticationPasswordResetResponse, GetApiUsersPagingData, GetApiUsersPagingError, GetApiUsersPagingResponse, GetApiUsersData, GetApiUsersError, GetApiUsersResponse, PostApiUsersData, PostApiUsersError, PostApiUsersResponse, GetApiUsersByIdData, GetApiUsersByIdError, GetApiUsersByIdResponse, PutApiUsersByIdData, PutApiUsersByIdError, PutApiUsersByIdResponse, DeleteApiUsersByIdData, DeleteApiUsersByIdError, DeleteApiUsersByIdResponse, PostApiUsersDeleteAccountData, PostApiUsersDeleteAccountError, PostApiUsersDeleteAccountResponse, GetApiBusinessesPagingData, GetApiBusinessesPagingError, GetApiBusinessesPagingResponse, GetApiBusinessesData, GetApiBusinessesError, GetApiBusinessesResponse, PostApiBusinessesData, PostApiBusinessesError, PostApiBusinessesResponse, GetApiBusinessesByIdData, GetApiBusinessesByIdError, GetApiBusinessesByIdResponse, PutApiBusinessesByIdData, PutApiBusinessesByIdError, PutApiBusinessesByIdResponse, DeleteApiBusinessesByIdData, DeleteApiBusinessesByIdError, DeleteApiBusinessesByIdResponse, GetApiCollectorsPagingData, GetApiCollectorsPagingError, GetApiCollectorsPagingResponse, GetApiCollectorsData, GetApiCollectorsError, GetApiCollectorsResponse, PostApiCollectorsData, PostApiCollectorsError, PostApiCollectorsResponse, GetApiCollectorsByIdData, GetApiCollectorsByIdError, GetApiCollectorsByIdResponse, DeleteApiCollectorsByIdData, DeleteApiCollectorsByIdError, DeleteApiCollectorsByIdResponse, PutApiCollectorsByIdData, PutApiCollectorsByIdError, PutApiCollectorsByIdResponse, GetApiProductsPagingData, GetApiProductsPagingError, GetApiProductsPagingResponse, GetApiProductsData, GetApiProductsError, GetApiProductsResponse, PostApiProductsData, PostApiProductsError, PostApiProductsResponse, GetApiProductsByIdData, GetApiProductsByIdError, GetApiProductsByIdResponse, DeleteApiProductsByIdData, DeleteApiProductsByIdError, DeleteApiProductsByIdResponse, PutApiProductsByIdData, PutApiProductsByIdError, PutApiProductsByIdResponse, GetApiCollectionsPagingData, GetApiCollectionsPagingError, GetApiCollectionsPagingResponse, GetApiCollectionsData, GetApiCollectionsError, GetApiCollectionsResponse, PostApiCollectionsData, PostApiCollectionsError, PostApiCollectionsResponse, GetApiCollectionsByIdData, GetApiCollectionsByIdError, GetApiCollectionsByIdResponse, DeleteApiCollectionsByIdData, DeleteApiCollectionsByIdError, DeleteApiCollectionsByIdResponse, PutApiCollectionsByIdData, PutApiCollectionsByIdError, PutApiCollectionsByIdResponse, GetApiCollectionsExportData, GetApiCollectionsExportError, GetApiCollectionsExportResponse } from './types.gen';

export const client = createClient(createConfig());

export const getApi = <ThrowOnError extends boolean = false>(options?: Options<unknown, ThrowOnError>) => { return (options?.client ?? client).get<GetApiResponse, GetApiError, ThrowOnError>({
    ...options,
    url: '/api'
}); };

export const postApiAuthenticationLogin = <ThrowOnError extends boolean = false>(options: Options<PostApiAuthenticationLoginData, ThrowOnError>) => { return (options?.client ?? client).post<PostApiAuthenticationLoginResponse, PostApiAuthenticationLoginError, ThrowOnError>({
    ...options,
    url: '/api/authentication/login'
}); };

export const postApiAuthenticationLogout = <ThrowOnError extends boolean = false>(options?: Options<unknown, ThrowOnError>) => { return (options?.client ?? client).post<PostApiAuthenticationLogoutResponse, PostApiAuthenticationLogoutError, ThrowOnError>({
    ...options,
    url: '/api/authentication/logout'
}); };

export const postApiAuthenticationRegister = <ThrowOnError extends boolean = false>(options?: Options<PostApiAuthenticationRegisterData, ThrowOnError>) => { return (options?.client ?? client).post<PostApiAuthenticationRegisterResponse, PostApiAuthenticationRegisterError, ThrowOnError>({
    ...options,
    url: '/api/authentication/register'
}); };

export const getApiAuthenticationCheck = <ThrowOnError extends boolean = false>(options?: Options<unknown, ThrowOnError>) => { return (options?.client ?? client).get<GetApiAuthenticationCheckResponse, GetApiAuthenticationCheckError, ThrowOnError>({
    ...options,
    url: '/api/authentication/check'
}); };

export const getApiAuthenticationMfaEnable = <ThrowOnError extends boolean = false>(options?: Options<unknown, ThrowOnError>) => { return (options?.client ?? client).get<GetApiAuthenticationMfaEnableResponse, GetApiAuthenticationMfaEnableError, ThrowOnError>({
    ...options,
    url: '/api/authentication/mfa/enable'
}); };

export const postApiAuthenticationMfaVerify = <ThrowOnError extends boolean = false>(options: Options<PostApiAuthenticationMfaVerifyData, ThrowOnError>) => { return (options?.client ?? client).post<PostApiAuthenticationMfaVerifyResponse, PostApiAuthenticationMfaVerifyError, ThrowOnError>({
    ...options,
    url: '/api/authentication/mfa/verify'
}); };

export const putApiAuthenticationPasswordReset = <ThrowOnError extends boolean = false>(options: Options<PutApiAuthenticationPasswordResetData, ThrowOnError>) => { return (options?.client ?? client).put<PutApiAuthenticationPasswordResetResponse, PutApiAuthenticationPasswordResetError, ThrowOnError>({
    ...options,
    url: '/api/authentication/password-reset'
}); };

export const getApiUsersPaging = <ThrowOnError extends boolean = false>(options?: Options<GetApiUsersPagingData, ThrowOnError>) => { return (options?.client ?? client).get<GetApiUsersPagingResponse, GetApiUsersPagingError, ThrowOnError>({
    ...options,
    url: '/api/users/paging'
}); };

export const getApiUsers = <ThrowOnError extends boolean = false>(options?: Options<GetApiUsersData, ThrowOnError>) => { return (options?.client ?? client).get<GetApiUsersResponse, GetApiUsersError, ThrowOnError>({
    ...options,
    url: '/api/users'
}); };

export const postApiUsers = <ThrowOnError extends boolean = false>(options: Options<PostApiUsersData, ThrowOnError>) => { return (options?.client ?? client).post<PostApiUsersResponse, PostApiUsersError, ThrowOnError>({
    ...options,
    url: '/api/users'
}); };

export const getApiUsersById = <ThrowOnError extends boolean = false>(options: Options<GetApiUsersByIdData, ThrowOnError>) => { return (options?.client ?? client).get<GetApiUsersByIdResponse, GetApiUsersByIdError, ThrowOnError>({
    ...options,
    url: '/api/users/{id}'
}); };

export const putApiUsersById = <ThrowOnError extends boolean = false>(options: Options<PutApiUsersByIdData, ThrowOnError>) => { return (options?.client ?? client).put<PutApiUsersByIdResponse, PutApiUsersByIdError, ThrowOnError>({
    ...options,
    url: '/api/users/{id}'
}); };

export const deleteApiUsersById = <ThrowOnError extends boolean = false>(options: Options<DeleteApiUsersByIdData, ThrowOnError>) => { return (options?.client ?? client).delete<DeleteApiUsersByIdResponse, DeleteApiUsersByIdError, ThrowOnError>({
    ...options,
    url: '/api/users/{id}'
}); };

export const postApiUsersDeleteAccount = <ThrowOnError extends boolean = false>(options: Options<PostApiUsersDeleteAccountData, ThrowOnError>) => { return (options?.client ?? client).post<PostApiUsersDeleteAccountResponse, PostApiUsersDeleteAccountError, ThrowOnError>({
    ...options,
    url: '/api/users/delete-account'
}); };

export const getApiBusinessesPaging = <ThrowOnError extends boolean = false>(options?: Options<GetApiBusinessesPagingData, ThrowOnError>) => { return (options?.client ?? client).get<GetApiBusinessesPagingResponse, GetApiBusinessesPagingError, ThrowOnError>({
    ...options,
    url: '/api/businesses/paging'
}); };

export const getApiBusinesses = <ThrowOnError extends boolean = false>(options?: Options<GetApiBusinessesData, ThrowOnError>) => { return (options?.client ?? client).get<GetApiBusinessesResponse, GetApiBusinessesError, ThrowOnError>({
    ...options,
    url: '/api/businesses'
}); };

export const postApiBusinesses = <ThrowOnError extends boolean = false>(options: Options<PostApiBusinessesData, ThrowOnError>) => { return (options?.client ?? client).post<PostApiBusinessesResponse, PostApiBusinessesError, ThrowOnError>({
    ...options,
    url: '/api/businesses'
}); };

export const getApiBusinessesById = <ThrowOnError extends boolean = false>(options: Options<GetApiBusinessesByIdData, ThrowOnError>) => { return (options?.client ?? client).get<GetApiBusinessesByIdResponse, GetApiBusinessesByIdError, ThrowOnError>({
    ...options,
    url: '/api/businesses/{id}'
}); };

export const putApiBusinessesById = <ThrowOnError extends boolean = false>(options: Options<PutApiBusinessesByIdData, ThrowOnError>) => { return (options?.client ?? client).put<PutApiBusinessesByIdResponse, PutApiBusinessesByIdError, ThrowOnError>({
    ...options,
    url: '/api/businesses/{id}'
}); };

export const deleteApiBusinessesById = <ThrowOnError extends boolean = false>(options: Options<DeleteApiBusinessesByIdData, ThrowOnError>) => { return (options?.client ?? client).delete<DeleteApiBusinessesByIdResponse, DeleteApiBusinessesByIdError, ThrowOnError>({
    ...options,
    url: '/api/businesses/{id}'
}); };

export const getApiCollectorsPaging = <ThrowOnError extends boolean = false>(options?: Options<GetApiCollectorsPagingData, ThrowOnError>) => { return (options?.client ?? client).get<GetApiCollectorsPagingResponse, GetApiCollectorsPagingError, ThrowOnError>({
    ...options,
    url: '/api/collectors/paging'
}); };

export const getApiCollectors = <ThrowOnError extends boolean = false>(options?: Options<GetApiCollectorsData, ThrowOnError>) => { return (options?.client ?? client).get<GetApiCollectorsResponse, GetApiCollectorsError, ThrowOnError>({
    ...options,
    url: '/api/collectors'
}); };

export const postApiCollectors = <ThrowOnError extends boolean = false>(options?: Options<PostApiCollectorsData, ThrowOnError>) => { return (options?.client ?? client).post<PostApiCollectorsResponse, PostApiCollectorsError, ThrowOnError>({
    ...options,
    url: '/api/collectors'
}); };

export const getApiCollectorsById = <ThrowOnError extends boolean = false>(options?: Options<GetApiCollectorsByIdData, ThrowOnError>) => { return (options?.client ?? client).get<GetApiCollectorsByIdResponse, GetApiCollectorsByIdError, ThrowOnError>({
    ...options,
    url: '/api/collectors/{id}'
}); };

export const deleteApiCollectorsById = <ThrowOnError extends boolean = false>(options: Options<DeleteApiCollectorsByIdData, ThrowOnError>) => { return (options?.client ?? client).delete<DeleteApiCollectorsByIdResponse, DeleteApiCollectorsByIdError, ThrowOnError>({
    ...options,
    url: '/api/collectors/{id}'
}); };

export const putApiCollectorsById = <ThrowOnError extends boolean = false>(options: Options<PutApiCollectorsByIdData, ThrowOnError>) => { return (options?.client ?? client).put<PutApiCollectorsByIdResponse, PutApiCollectorsByIdError, ThrowOnError>({
    ...options,
    url: '/api/collectors/{id}'
}); };

export const getApiProductsPaging = <ThrowOnError extends boolean = false>(options?: Options<GetApiProductsPagingData, ThrowOnError>) => { return (options?.client ?? client).get<GetApiProductsPagingResponse, GetApiProductsPagingError, ThrowOnError>({
    ...options,
    url: '/api/products/paging'
}); };

export const getApiProducts = <ThrowOnError extends boolean = false>(options?: Options<GetApiProductsData, ThrowOnError>) => { return (options?.client ?? client).get<GetApiProductsResponse, GetApiProductsError, ThrowOnError>({
    ...options,
    url: '/api/products'
}); };

export const postApiProducts = <ThrowOnError extends boolean = false>(options: Options<PostApiProductsData, ThrowOnError>) => { return (options?.client ?? client).post<PostApiProductsResponse, PostApiProductsError, ThrowOnError>({
    ...options,
    url: '/api/products'
}); };

export const getApiProductsById = <ThrowOnError extends boolean = false>(options: Options<GetApiProductsByIdData, ThrowOnError>) => { return (options?.client ?? client).get<GetApiProductsByIdResponse, GetApiProductsByIdError, ThrowOnError>({
    ...options,
    url: '/api/products/{id}'
}); };

export const deleteApiProductsById = <ThrowOnError extends boolean = false>(options: Options<DeleteApiProductsByIdData, ThrowOnError>) => { return (options?.client ?? client).delete<DeleteApiProductsByIdResponse, DeleteApiProductsByIdError, ThrowOnError>({
    ...options,
    url: '/api/products/{id}'
}); };

export const putApiProductsById = <ThrowOnError extends boolean = false>(options: Options<PutApiProductsByIdData, ThrowOnError>) => { return (options?.client ?? client).put<PutApiProductsByIdResponse, PutApiProductsByIdError, ThrowOnError>({
    ...options,
    url: '/api/products/{id}'
}); };

export const getApiCollectionsPaging = <ThrowOnError extends boolean = false>(options?: Options<GetApiCollectionsPagingData, ThrowOnError>) => { return (options?.client ?? client).get<GetApiCollectionsPagingResponse, GetApiCollectionsPagingError, ThrowOnError>({
    ...options,
    url: '/api/collections/paging'
}); };

export const getApiCollections = <ThrowOnError extends boolean = false>(options?: Options<GetApiCollectionsData, ThrowOnError>) => { return (options?.client ?? client).get<GetApiCollectionsResponse, GetApiCollectionsError, ThrowOnError>({
    ...options,
    url: '/api/collections'
}); };

export const postApiCollections = <ThrowOnError extends boolean = false>(options: Options<PostApiCollectionsData, ThrowOnError>) => { return (options?.client ?? client).post<PostApiCollectionsResponse, PostApiCollectionsError, ThrowOnError>({
    ...options,
    url: '/api/collections'
}); };

export const getApiCollectionsById = <ThrowOnError extends boolean = false>(options: Options<GetApiCollectionsByIdData, ThrowOnError>) => { return (options?.client ?? client).get<GetApiCollectionsByIdResponse, GetApiCollectionsByIdError, ThrowOnError>({
    ...options,
    url: '/api/collections/{id}'
}); };

export const deleteApiCollectionsById = <ThrowOnError extends boolean = false>(options: Options<DeleteApiCollectionsByIdData, ThrowOnError>) => { return (options?.client ?? client).delete<DeleteApiCollectionsByIdResponse, DeleteApiCollectionsByIdError, ThrowOnError>({
    ...options,
    url: '/api/collections/{id}'
}); };

export const putApiCollectionsById = <ThrowOnError extends boolean = false>(options: Options<PutApiCollectionsByIdData, ThrowOnError>) => { return (options?.client ?? client).put<PutApiCollectionsByIdResponse, PutApiCollectionsByIdError, ThrowOnError>({
    ...options,
    url: '/api/collections/{id}'
}); };

export const getApiCollectionsExport = <ThrowOnError extends boolean = false>(options?: Options<GetApiCollectionsExportData, ThrowOnError>) => { return (options?.client ?? client).get<GetApiCollectionsExportResponse, GetApiCollectionsExportError, ThrowOnError>({
    ...options,
    url: '/api/collections/export'
}); };