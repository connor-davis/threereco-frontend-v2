// This file is auto-generated by @hey-api/openapi-ts

export type GetApiResponse = string;

export type GetApiError = unknown;

export type PostApiAuthenticationLoginData = {
  /**
   * The login payload needed to log a user in.
   */
  body: {
    email: string;
    password: string;
  };
};

export type PostApiAuthenticationLoginResponse = {
  id: string;
  email: string;
  active: boolean;
  role: "system_admin" | "admin" | "staff" | "business" | "collector";
  mfaEnabled: boolean;
  mfaVerified: boolean;
  createdAt: string;
  updatedAt: string;
};

export type PostApiAuthenticationLoginError = {
  message: string;
};

export type PostApiAuthenticationLogoutResponse = string;

export type PostApiAuthenticationLogoutError = {
  message: string;
};

export type PostApiAuthenticationRegisterData = {
  /**
   * The user object of the user being registered.
   */
  body?: {
    email: string;
    password: string;
  };
};

export type PostApiAuthenticationRegisterResponse = {
  id: string;
  email: string;
  active: boolean;
  role: "system_admin" | "admin" | "staff" | "business" | "collector";
  mfaEnabled: boolean;
  mfaVerified: boolean;
  createdAt: string;
  updatedAt: string;
};

export type PostApiAuthenticationRegisterError = {
  message: string;
};

export type GetApiAuthenticationCheckResponse = {
  id: string;
  email: string;
  active: boolean;
  role: "system_admin" | "admin" | "staff" | "business" | "collector";
  mfaEnabled: boolean;
  mfaVerified: boolean;
  createdAt: string;
  updatedAt: string;
};

export type GetApiAuthenticationCheckError = {
  message: string;
};

export type GetApiAuthenticationMfaEnableResponse = string;

export type GetApiAuthenticationMfaEnableError = {
  message: string;
};

export type PostApiAuthenticationMfaVerifyData = {
  /**
   * The verify payload needed to verify a users MFA authentication.
   */
  body: {
    code?: string;
  };
};

export type PostApiAuthenticationMfaVerifyResponse = string;

export type PostApiAuthenticationMfaVerifyError = {
  message: string;
};

export type PutApiAuthenticationPasswordResetData = {
  /**
   * The password reset payload.
   */
  body: {
    code: string;
    password: string;
    userId: string;
  };
};

export type PutApiAuthenticationPasswordResetResponse = string;

export type PutApiAuthenticationPasswordResetError = {
  message: string;
};

export type DeleteApiAuthenticationDisableMfaData = {
  query: {
    id: string;
  };
};

export type DeleteApiAuthenticationDisableMfaResponse = string;

export type DeleteApiAuthenticationDisableMfaError = {
  message: string;
};

export type GetApiUsersPagingData = {
  query?: {
    count?: number | null;
  };
};

export type GetApiUsersPagingResponse = {
  totalUsers: number | null;
  totalPages: number | null;
};

export type GetApiUsersPagingError = {
  message: string;
};

export type GetApiUsersData = {
  query?: {
    count?: number | null;
    page?: number | null;
    role?:
      | ("system_admin" | "admin" | "staff" | "business" | "collector")
      | null;
    usePaging?: "true" | "false" | "1" | "0";
  };
};

export type GetApiUsersResponse = Array<{
  id: string;
  email: string;
  active: boolean;
  role: "system_admin" | "admin" | "staff" | "business" | "collector";
  mfaEnabled: boolean;
  mfaVerified: boolean;
  createdAt: string;
  updatedAt: string;
}>;

export type GetApiUsersError = {
  message: string;
};

export type PostApiUsersData = {
  /**
   * The new user object payload.
   */
  body: {
    email: string;
    password: string;
    role?: "system_admin" | "admin" | "staff" | "business" | "collector";
  };
};

export type PostApiUsersResponse = {
  id: string;
  email: string;
  active: boolean;
  role: "system_admin" | "admin" | "staff" | "business" | "collector";
  mfaEnabled: boolean;
  mfaVerified: boolean;
  createdAt: string;
  updatedAt: string;
};

export type PostApiUsersError = {
  message: string;
};

export type GetApiUsersByIdData = {
  path: {
    id: string;
  };
};

export type GetApiUsersByIdResponse = {
  id: string;
  email: string;
  active: boolean;
  role: "system_admin" | "admin" | "staff" | "business" | "collector";
  mfaEnabled: boolean;
  mfaVerified: boolean;
  createdAt: string;
  updatedAt: string;
};

export type GetApiUsersByIdError = {
  message: string;
};

export type PutApiUsersByIdData = {
  /**
   * The updated user object.
   */
  body?: {
    email: string;
    role?: "system_admin" | "admin" | "staff" | "business" | "collector";
    mfaEnabled?: boolean;
  };
  path: {
    id: string;
  };
};

export type PutApiUsersByIdResponse = {
  id: string;
  email: string;
  active: boolean;
  role: "system_admin" | "admin" | "staff" | "business" | "collector";
  mfaEnabled: boolean;
  mfaVerified: boolean;
  createdAt: string;
  updatedAt: string;
};

export type PutApiUsersByIdError = {
  message: string;
};

export type DeleteApiUsersByIdData = {
  path: {
    id: string;
  };
};

export type DeleteApiUsersByIdResponse = string;

export type DeleteApiUsersByIdError = {
  message: string;
};

export type PostApiUsersDeleteAccountData = {
  /**
   * The delete user object for the deleted user.
   */
  body: {
    email: string;
    password: string;
  };
};

export type PostApiUsersDeleteAccountResponse = string;

export type PostApiUsersDeleteAccountError = {
  message: string;
};

export type GetApiBusinessesPagingData = {
  query?: {
    count?: number | null;
  };
};

export type GetApiBusinessesPagingResponse = {
  totalBusinesses: number | null;
  totalPages: number | null;
};

export type GetApiBusinessesPagingError = {
  message: string;
};

export type GetApiBusinessesData = {
  query?: {
    count?: number | null;
    includeUser?: "true" | "false" | "1" | "0";
    page?: number | null;
    usePaging?: "true" | "false" | "1" | "0";
  };
};

export type GetApiBusinessesResponse = Array<{
  id: string;
  name: string;
  type: "Recycler" | "Waste Collector" | "Buy Back Centre";
  description: string;
  phoneNumber: string;
  address: string;
  city: string;
  province: string;
  zipCode: string;
  userId: string;
  createdAt: string;
  updatedAt: string;
  user?: {
    id: string;
    email: string;
    active: boolean;
    role: "system_admin" | "admin" | "staff" | "business" | "collector";
    mfaEnabled: boolean;
    mfaVerified: boolean;
    createdAt: string;
    updatedAt: string;
  };
}>;

export type GetApiBusinessesError = {
  message: string;
};

export type PostApiBusinessesData = {
  /**
   * The business object of the new business.
   */
  body: {
    name: string;
    type?: "Recycler" | "Waste Collector" | "Buy Back Centre";
    description: string;
    phoneNumber: string;
    address: string;
    city: string;
    province: string;
    zipCode: string;
    userId: string;
  };
};

export type PostApiBusinessesResponse = {
  id: string;
  name: string;
  type: "Recycler" | "Waste Collector" | "Buy Back Centre";
  description: string;
  phoneNumber: string;
  address: string;
  city: string;
  province: string;
  zipCode: string;
  userId: string;
  createdAt: string;
  updatedAt: string;
  user?: {
    id: string;
    email: string;
    active: boolean;
    role: "system_admin" | "admin" | "staff" | "business" | "collector";
    mfaEnabled: boolean;
    mfaVerified: boolean;
    createdAt: string;
    updatedAt: string;
  };
};

export type PostApiBusinessesError = {
  message: string;
};

export type GetApiBusinessesByIdData = {
  path: {
    id: string;
  };
  query?: {
    includeUser?: "true" | "false" | "1" | "0";
  };
};

export type GetApiBusinessesByIdResponse = {
  id: string;
  name: string;
  type: "Recycler" | "Waste Collector" | "Buy Back Centre";
  description: string;
  phoneNumber: string;
  address: string;
  city: string;
  province: string;
  zipCode: string;
  userId: string;
  createdAt: string;
  updatedAt: string;
  user?: {
    id: string;
    email: string;
    active: boolean;
    role: "system_admin" | "admin" | "staff" | "business" | "collector";
    mfaEnabled: boolean;
    mfaVerified: boolean;
    createdAt: string;
    updatedAt: string;
  };
};

export type GetApiBusinessesByIdError = {
  message: string;
};

export type PutApiBusinessesByIdData = {
  /**
   * The business object for the updated business.
   */
  body?: {
    name: string;
    type?: "Recycler" | "Waste Collector" | "Buy Back Centre";
    description: string;
    phoneNumber: string;
    address: string;
    city: string;
    province: string;
    zipCode: string;
    userId: string;
  };
  path: {
    id: string;
  };
};

export type PutApiBusinessesByIdResponse = {
  id: string;
  name: string;
  type: "Recycler" | "Waste Collector" | "Buy Back Centre";
  description: string;
  phoneNumber: string;
  address: string;
  city: string;
  province: string;
  zipCode: string;
  userId: string;
  createdAt: string;
  updatedAt: string;
  user?: {
    id: string;
    email: string;
    active: boolean;
    role: "system_admin" | "admin" | "staff" | "business" | "collector";
    mfaEnabled: boolean;
    mfaVerified: boolean;
    createdAt: string;
    updatedAt: string;
  };
};

export type PutApiBusinessesByIdError = {
  message: string;
};

export type DeleteApiBusinessesByIdData = {
  path: {
    id: string;
  };
};

export type DeleteApiBusinessesByIdResponse = string;

export type DeleteApiBusinessesByIdError = {
  message: string;
};

export type GetApiCollectorsPagingData = {
  query?: {
    count?: number | null;
  };
};

export type GetApiCollectorsPagingResponse = {
  totalCollectors: number | null;
  totalPages: number | null;
};

export type GetApiCollectorsPagingError = {
  message: string;
};

export type GetApiCollectorsData = {
  query?: {
    count?: number | null;
    includeUser?: "true" | "false" | "1" | "0";
    page?: number | null;
    usePaging?: "true" | "false" | "1" | "0";
  };
};

export type GetApiCollectorsResponse = Array<{
  id: string;
  firstName: string;
  lastName: string;
  idNumber: string;
  phoneNumber: string;
  address: string;
  city: string;
  province: string;
  zipCode: string;
  bankName: string;
  bankAccountHolder: string;
  bankAccountNumber: string;
  userId: string;
  createdAt: string;
  updatedAt: string;
  user?: {
    id: string;
    email: string;
    active: boolean;
    role: "system_admin" | "admin" | "staff" | "business" | "collector";
    mfaEnabled: boolean;
    mfaVerified: boolean;
    createdAt: string;
    updatedAt: string;
  };
}>;

export type GetApiCollectorsError = {
  message: string;
};

export type PostApiCollectorsData = {
  /**
   * The collector object of the new collector.
   */
  body?: {
    firstName: string;
    lastName: string;
    idNumber: string;
    phoneNumber: string;
    address: string;
    city: string;
    province: string;
    zipCode: string;
    bankName: string;
    bankAccountHolder: string;
    bankAccountNumber: string;
    userId: string;
  };
};

export type PostApiCollectorsResponse = {
  id: string;
  firstName: string;
  lastName: string;
  idNumber: string;
  phoneNumber: string;
  address: string;
  city: string;
  province: string;
  zipCode: string;
  bankName: string;
  bankAccountHolder: string;
  bankAccountNumber: string;
  userId: string;
  createdAt: string;
  updatedAt: string;
  user?: {
    id: string;
    email: string;
    active: boolean;
    role: "system_admin" | "admin" | "staff" | "business" | "collector";
    mfaEnabled: boolean;
    mfaVerified: boolean;
    createdAt: string;
    updatedAt: string;
  };
};

export type PostApiCollectorsError =
  | {
      message: string;
    }
  | {
      message: string;
    };

export type GetApiCollectorsByIdData = {
  path?: {
    id?: string | null;
  };
  query?: {
    includeUser?: "true" | "false" | "1" | "0";
    usePaging?: "true" | "false" | "1" | "0";
  };
};

export type GetApiCollectorsByIdResponse = {
  id: string;
  firstName: string;
  lastName: string;
  idNumber: string;
  phoneNumber: string;
  address: string;
  city: string;
  province: string;
  zipCode: string;
  bankName: string;
  bankAccountHolder: string;
  bankAccountNumber: string;
  userId: string;
  createdAt: string;
  updatedAt: string;
  user?: {
    id: string;
    email: string;
    active: boolean;
    role: "system_admin" | "admin" | "staff" | "business" | "collector";
    mfaEnabled: boolean;
    mfaVerified: boolean;
    createdAt: string;
    updatedAt: string;
  };
};

export type GetApiCollectorsByIdError = {
  message: string;
};

export type DeleteApiCollectorsByIdData = {
  path: {
    id: string;
  };
};

export type DeleteApiCollectorsByIdResponse = string;

export type DeleteApiCollectorsByIdError = {
  message: string;
};

export type PutApiCollectorsByIdData = {
  /**
   * The collector object for the updated collector.
   */
  body?: {
    firstName: string;
    lastName: string;
    idNumber: string;
    phoneNumber: string;
    address: string;
    city: string;
    province: string;
    zipCode: string;
    bankName: string;
    bankAccountHolder: string;
    bankAccountNumber: string;
    userId: string;
  };
  path: {
    id: string;
  };
};

export type PutApiCollectorsByIdResponse = {
  id: string;
  firstName: string;
  lastName: string;
  idNumber: string;
  phoneNumber: string;
  address: string;
  city: string;
  province: string;
  zipCode: string;
  bankName: string;
  bankAccountHolder: string;
  bankAccountNumber: string;
  userId: string;
  createdAt: string;
  updatedAt: string;
  user?: {
    id: string;
    email: string;
    active: boolean;
    role: "system_admin" | "admin" | "staff" | "business" | "collector";
    mfaEnabled: boolean;
    mfaVerified: boolean;
    createdAt: string;
    updatedAt: string;
  };
};

export type PutApiCollectorsByIdError =
  | {
      message: string;
    }
  | {
      message: string;
    };

export type GetApiProductsPagingData = {
  query?: {
    count?: number | null;
  };
};

export type GetApiProductsPagingResponse = {
  totalProducts: number | null;
  totalPages: number | null;
};

export type GetApiProductsPagingError = {
  message: string;
};

export type GetApiProductsData = {
  query?: {
    count?: number | null;
    includeBusiness?: "true" | "false" | "1" | "0";
    includeBusinessUser?: "true" | "false" | "1" | "0";
    page?: number | null;
    usePaging?: "true" | "false" | "1" | "0";
  };
};

export type GetApiProductsResponse = Array<{
  id: string;
  name: string;
  price: string;
  gwCode: string;
  carbonFactor: string;
  businessId: string;
  createdAt: string;
  updatedAt: string;
  business?: {
    id: string;
    name: string;
    type: "Recycler" | "Waste Collector" | "Buy Back Centre";
    description: string;
    phoneNumber: string;
    address: string;
    city: string;
    province: string;
    zipCode: string;
    userId: string;
    createdAt: string;
    updatedAt: string;
    user?: {
      id: string;
      email: string;
      active: boolean;
      role: "system_admin" | "admin" | "staff" | "business" | "collector";
      mfaEnabled: boolean;
      mfaVerified: boolean;
      createdAt: string;
      updatedAt: string;
    };
  } | null;
}>;

export type GetApiProductsError = {
  message: string;
};

export type PostApiProductsData = {
  /**
   * The product object of the new product.
   */
  body: {
    name: string;
    price: string;
    gwCode: string;
    carbonFactor: string;
    businessId?: string | null;
  };
};

export type PostApiProductsResponse = {
  id: string;
  name: string;
  price: string;
  gwCode: string;
  carbonFactor: string;
  businessId: string;
  createdAt: string;
  updatedAt: string;
  business?: {
    id: string;
    name: string;
    type: "Recycler" | "Waste Collector" | "Buy Back Centre";
    description: string;
    phoneNumber: string;
    address: string;
    city: string;
    province: string;
    zipCode: string;
    userId: string;
    createdAt: string;
    updatedAt: string;
    user?: {
      id: string;
      email: string;
      active: boolean;
      role: "system_admin" | "admin" | "staff" | "business" | "collector";
      mfaEnabled: boolean;
      mfaVerified: boolean;
      createdAt: string;
      updatedAt: string;
    };
  } | null;
};

export type PostApiProductsError = {
  message: string;
};

export type GetApiProductsByIdData = {
  path: {
    id: string;
  };
  query?: {
    includeBusiness?: "true" | "false" | "1" | "0";
    includeBusinessUser?: "true" | "false" | "1" | "0";
  };
};

export type GetApiProductsByIdResponse = {
  id: string;
  name: string;
  price: string;
  gwCode: string;
  carbonFactor: string;
  businessId: string;
  createdAt: string;
  updatedAt: string;
  business?: {
    id: string;
    name: string;
    type: "Recycler" | "Waste Collector" | "Buy Back Centre";
    description: string;
    phoneNumber: string;
    address: string;
    city: string;
    province: string;
    zipCode: string;
    userId: string;
    createdAt: string;
    updatedAt: string;
    user?: {
      id: string;
      email: string;
      active: boolean;
      role: "system_admin" | "admin" | "staff" | "business" | "collector";
      mfaEnabled: boolean;
      mfaVerified: boolean;
      createdAt: string;
      updatedAt: string;
    };
  } | null;
};

export type GetApiProductsByIdError = {
  message: string;
};

export type DeleteApiProductsByIdData = {
  path: {
    id: string;
  };
};

export type DeleteApiProductsByIdResponse = string;

export type DeleteApiProductsByIdError = {
  message: string;
};

export type PutApiProductsByIdData = {
  /**
   * The product object for the updated product.
   */
  body?: {
    name: string;
    price: string;
    gwCode: string;
    carbonFactor: string;
    businessId?: string | null;
  };
  path: {
    id: string;
  };
};

export type PutApiProductsByIdResponse = {
  id: string;
  name: string;
  price: string;
  gwCode: string;
  carbonFactor: string;
  businessId: string;
  createdAt: string;
  updatedAt: string;
  business?: {
    id: string;
    name: string;
    type: "Recycler" | "Waste Collector" | "Buy Back Centre";
    description: string;
    phoneNumber: string;
    address: string;
    city: string;
    province: string;
    zipCode: string;
    userId: string;
    createdAt: string;
    updatedAt: string;
    user?: {
      id: string;
      email: string;
      active: boolean;
      role: "system_admin" | "admin" | "staff" | "business" | "collector";
      mfaEnabled: boolean;
      mfaVerified: boolean;
      createdAt: string;
      updatedAt: string;
    };
  } | null;
};

export type PutApiProductsByIdError = {
  message: string;
};

export type GetApiCollectionsPagingData = {
  query?: {
    count?: number | null;
  };
};

export type GetApiCollectionsPagingResponse = {
  totalCollections: number | null;
  totalPages: number | null;
};

export type GetApiCollectionsPagingError = {
  message: string;
};

export type GetApiCollectionsExportData = {
  query?: {
    endDate?: string | null;
    startDate?: string | null;
  };
};

export type GetApiCollectionsExportResponse = string;

export type GetApiCollectionsExportError = {
  message: string;
};

export type GetApiCollectionsData = {
  query?: {
    count?: number | null;
    includeBusiness?: "true" | "false" | "1" | "0";
    includeBusinessUser?: "true" | "false" | "1" | "0";
    includeCollector?: "true" | "false" | "1" | "0";
    includeCollectorUser?: "true" | "false" | "1" | "0";
    includeProduct?: "true" | "false" | "1" | "0";
    includeProductBusiness?: "true" | "false" | "1" | "0";
    includeProductBusinessUser?: "true" | "false" | "1" | "0";
    page?: number | null;
    usePaging?: "true" | "false" | "1" | "0";
  };
};

export type GetApiCollectionsResponse = Array<{
  id: string;
  businessId: string;
  collectorId: string;
  productId: string;
  weight: string;
  createdAt: string;
  updatedAt: string;
  business?: {
    id: string;
    name: string;
    type: "Recycler" | "Waste Collector" | "Buy Back Centre";
    description: string;
    phoneNumber: string;
    address: string;
    city: string;
    province: string;
    zipCode: string;
    userId: string;
    createdAt: string;
    updatedAt: string;
    user?: {
      id: string;
      email: string;
      active: boolean;
      role: "system_admin" | "admin" | "staff" | "business" | "collector";
      mfaEnabled: boolean;
      mfaVerified: boolean;
      createdAt: string;
      updatedAt: string;
    };
  } | null;
  collector?: {
    id: string;
    firstName: string;
    lastName: string;
    idNumber: string;
    phoneNumber: string;
    address: string;
    city: string;
    province: string;
    zipCode: string;
    bankName: string;
    bankAccountHolder: string;
    bankAccountNumber: string;
    userId: string;
    createdAt: string;
    updatedAt: string;
    user?: {
      id: string;
      email: string;
      active: boolean;
      role: "system_admin" | "admin" | "staff" | "business" | "collector";
      mfaEnabled: boolean;
      mfaVerified: boolean;
      createdAt: string;
      updatedAt: string;
    };
  } | null;
  product?: {
    id: string;
    name: string;
    price: string;
    gwCode: string;
    carbonFactor: string;
    businessId: string;
    createdAt: string;
    updatedAt: string;
    business?: {
      id: string;
      name: string;
      type: "Recycler" | "Waste Collector" | "Buy Back Centre";
      description: string;
      phoneNumber: string;
      address: string;
      city: string;
      province: string;
      zipCode: string;
      userId: string;
      createdAt: string;
      updatedAt: string;
      user?: {
        id: string;
        email: string;
        active: boolean;
        role: "system_admin" | "admin" | "staff" | "business" | "collector";
        mfaEnabled: boolean;
        mfaVerified: boolean;
        createdAt: string;
        updatedAt: string;
      };
    } | null;
  } | null;
}>;

export type GetApiCollectionsError = {
  message: string;
};

export type PostApiCollectionsData = {
  /**
   * The collection object of the new collection.
   */
  body: {
    collectorId: string;
    productId: string;
    weight: string;
    businessId?: string | null;
  };
};

export type PostApiCollectionsResponse = {
  id: string;
  businessId: string;
  collectorId: string;
  productId: string;
  weight: string;
  createdAt: string;
  updatedAt: string;
  business?: {
    id: string;
    name: string;
    type: "Recycler" | "Waste Collector" | "Buy Back Centre";
    description: string;
    phoneNumber: string;
    address: string;
    city: string;
    province: string;
    zipCode: string;
    userId: string;
    createdAt: string;
    updatedAt: string;
    user?: {
      id: string;
      email: string;
      active: boolean;
      role: "system_admin" | "admin" | "staff" | "business" | "collector";
      mfaEnabled: boolean;
      mfaVerified: boolean;
      createdAt: string;
      updatedAt: string;
    };
  } | null;
  collector?: {
    id: string;
    firstName: string;
    lastName: string;
    idNumber: string;
    phoneNumber: string;
    address: string;
    city: string;
    province: string;
    zipCode: string;
    bankName: string;
    bankAccountHolder: string;
    bankAccountNumber: string;
    userId: string;
    createdAt: string;
    updatedAt: string;
    user?: {
      id: string;
      email: string;
      active: boolean;
      role: "system_admin" | "admin" | "staff" | "business" | "collector";
      mfaEnabled: boolean;
      mfaVerified: boolean;
      createdAt: string;
      updatedAt: string;
    };
  } | null;
  product?: {
    id: string;
    name: string;
    price: string;
    gwCode: string;
    carbonFactor: string;
    businessId: string;
    createdAt: string;
    updatedAt: string;
    business?: {
      id: string;
      name: string;
      type: "Recycler" | "Waste Collector" | "Buy Back Centre";
      description: string;
      phoneNumber: string;
      address: string;
      city: string;
      province: string;
      zipCode: string;
      userId: string;
      createdAt: string;
      updatedAt: string;
      user?: {
        id: string;
        email: string;
        active: boolean;
        role: "system_admin" | "admin" | "staff" | "business" | "collector";
        mfaEnabled: boolean;
        mfaVerified: boolean;
        createdAt: string;
        updatedAt: string;
      };
    } | null;
  } | null;
};

export type PostApiCollectionsError = {
  message: string;
};

export type GetApiCollectionsByIdData = {
  path: {
    id: string;
  };
  query?: {
    includeBusiness?: "true" | "false" | "1" | "0";
    includeBusinessUser?: "true" | "false" | "1" | "0";
    includeCollector?: "true" | "false" | "1" | "0";
    includeCollectorUser?: "true" | "false" | "1" | "0";
    includeProduct?: "true" | "false" | "1" | "0";
    includeProductBusiness?: "true" | "false" | "1" | "0";
    includeProductBusinessUser?: "true" | "false" | "1" | "0";
  };
};

export type GetApiCollectionsByIdResponse = {
  id: string;
  businessId: string;
  collectorId: string;
  productId: string;
  weight: string;
  createdAt: string;
  updatedAt: string;
  business?: {
    id: string;
    name: string;
    type: "Recycler" | "Waste Collector" | "Buy Back Centre";
    description: string;
    phoneNumber: string;
    address: string;
    city: string;
    province: string;
    zipCode: string;
    userId: string;
    createdAt: string;
    updatedAt: string;
    user?: {
      id: string;
      email: string;
      active: boolean;
      role: "system_admin" | "admin" | "staff" | "business" | "collector";
      mfaEnabled: boolean;
      mfaVerified: boolean;
      createdAt: string;
      updatedAt: string;
    };
  } | null;
  collector?: {
    id: string;
    firstName: string;
    lastName: string;
    idNumber: string;
    phoneNumber: string;
    address: string;
    city: string;
    province: string;
    zipCode: string;
    bankName: string;
    bankAccountHolder: string;
    bankAccountNumber: string;
    userId: string;
    createdAt: string;
    updatedAt: string;
    user?: {
      id: string;
      email: string;
      active: boolean;
      role: "system_admin" | "admin" | "staff" | "business" | "collector";
      mfaEnabled: boolean;
      mfaVerified: boolean;
      createdAt: string;
      updatedAt: string;
    };
  } | null;
  product?: {
    id: string;
    name: string;
    price: string;
    gwCode: string;
    carbonFactor: string;
    businessId: string;
    createdAt: string;
    updatedAt: string;
    business?: {
      id: string;
      name: string;
      type: "Recycler" | "Waste Collector" | "Buy Back Centre";
      description: string;
      phoneNumber: string;
      address: string;
      city: string;
      province: string;
      zipCode: string;
      userId: string;
      createdAt: string;
      updatedAt: string;
      user?: {
        id: string;
        email: string;
        active: boolean;
        role: "system_admin" | "admin" | "staff" | "business" | "collector";
        mfaEnabled: boolean;
        mfaVerified: boolean;
        createdAt: string;
        updatedAt: string;
      };
    } | null;
  } | null;
};

export type GetApiCollectionsByIdError = {
  message: string;
};

export type DeleteApiCollectionsByIdData = {
  path: {
    id: string;
  };
};

export type DeleteApiCollectionsByIdResponse = string;

export type DeleteApiCollectionsByIdError = {
  message: string;
};

export type PutApiCollectionsByIdData = {
  /**
   * The collection object for the updated collection.
   */
  body?: {
    collectorId: string;
    productId: string;
    weight: string;
    businessId?: string | null;
  };
  path: {
    id: string;
  };
};

export type PutApiCollectionsByIdResponse = {
  id: string;
  businessId: string;
  collectorId: string;
  productId: string;
  weight: string;
  createdAt: string;
  updatedAt: string;
  business?: {
    id: string;
    name: string;
    type: "Recycler" | "Waste Collector" | "Buy Back Centre";
    description: string;
    phoneNumber: string;
    address: string;
    city: string;
    province: string;
    zipCode: string;
    userId: string;
    createdAt: string;
    updatedAt: string;
    user?: {
      id: string;
      email: string;
      active: boolean;
      role: "system_admin" | "admin" | "staff" | "business" | "collector";
      mfaEnabled: boolean;
      mfaVerified: boolean;
      createdAt: string;
      updatedAt: string;
    };
  } | null;
  collector?: {
    id: string;
    firstName: string;
    lastName: string;
    idNumber: string;
    phoneNumber: string;
    address: string;
    city: string;
    province: string;
    zipCode: string;
    bankName: string;
    bankAccountHolder: string;
    bankAccountNumber: string;
    userId: string;
    createdAt: string;
    updatedAt: string;
    user?: {
      id: string;
      email: string;
      active: boolean;
      role: "system_admin" | "admin" | "staff" | "business" | "collector";
      mfaEnabled: boolean;
      mfaVerified: boolean;
      createdAt: string;
      updatedAt: string;
    };
  } | null;
  product?: {
    id: string;
    name: string;
    price: string;
    gwCode: string;
    carbonFactor: string;
    businessId: string;
    createdAt: string;
    updatedAt: string;
    business?: {
      id: string;
      name: string;
      type: "Recycler" | "Waste Collector" | "Buy Back Centre";
      description: string;
      phoneNumber: string;
      address: string;
      city: string;
      province: string;
      zipCode: string;
      userId: string;
      createdAt: string;
      updatedAt: string;
      user?: {
        id: string;
        email: string;
        active: boolean;
        role: "system_admin" | "admin" | "staff" | "business" | "collector";
        mfaEnabled: boolean;
        mfaVerified: boolean;
        createdAt: string;
        updatedAt: string;
      };
    } | null;
  } | null;
};

export type PutApiCollectionsByIdError = {
  message: string;
};
